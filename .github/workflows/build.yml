name: Build and Package Bitmap2SVG Python Library

on:
  push:
    branches: [ bitmap2svg ]
  pull_request:
    branches: [ bitmap2svg ]

jobs:
  build_wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # Don't cancel other jobs if one fails
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"] # Test against multiple Python versions

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true # Use this if Potrace is included as a submodule

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install OS Dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake libpotrace-dev pkg-config

    - name: Build Python Wheel
      run: |
        set -euo pipefail # Set shell to bash and enable immediate exit on error, print commands
    
        python -m pip install --upgrade pip
        pip install build wheel setuptools
    
        export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig"
        echo "Set PKG_CONFIG_PATH to: ${PKG_CONFIG_PATH}"
    
        echo "--- Verifying Potrace PkgConfig in Build Step Environment ---"
    
        echo "Running 'pkg-config --variable pc_path pkg-config' to show default search paths:"
        pkg_config --variable pc_path pkg-config || echo "Could not get pkg-config search paths."
    
        echo "Checking if 'potrace' module is found with our PKG_CONFIG_PATH:"
        if pkg-config --exists potrace; then
            echo "✅ Success: pkg-config found 'potrace' using set PKG_CONFIG_PATH."
            echo "--- Potrace CFLAGS ---"
            pkg-config --cflags potrace 
            echo "--- Potrace LIBS ---"
            pkg-config --libs potrace   
        else
            echo "❌ Failure: pkg-config did NOT find 'potrace' even with set PKG_CONFIG_PATH."
            echo "--- Diagnosing location of potrace.pc ---"
            echo "Searching for potrace.pc in directories listed in PKG_CONFIG_PATH:"
            echo "$PKG_CONFIG_PATH" | tr ':' '\n' | while read dir; do
                if [ -d "$dir" ]; then
                    echo "Contents of $dir:"
                    ls "$dir"/potrace.pc 2>/dev/null && echo "Found potrace.pc in $dir" || echo "potrace.pc not found in $dir"
                else
                    echo "Directory $dir not found or is not a directory."
                fi
            done
    
            echo "Searching broader system paths with find:"
            find /usr /lib -name "potrace.pc" 2>/dev/null || echo "No potrace.pc found in common /usr, /lib paths."
    
            echo "--- Critical Error: potrace.pc not found or pkg-config issue persists ---"
            exit 1 
        fi
        echo "--- End Verify Potrace PkgConfig in Build Step Environment ---"
    
        echo "Running python -m build --wheel..."
        python -m build --wheel

    # - name: Build Python Wheel
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install build wheel setuptools
    #     export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig"
    #     echo "Set PKG_CONFIG_PATH to: ${PKG_CONFIG_PATH}"
    #     python -m build --wheel

    - name: Upload artifact (wheels)
      uses: actions/upload-artifact@v4
      with:
        name: python-bitmap-to-svg-${{ runner.os }}-${{ matrix.python-version }}
        path: dist/*.whl
        retention-days: 7 # Optional: keep artifacts for a few days
