name: Build and Upload Wheels

on:
    push:
        tags:
            - 'v[0-9]+.*'
    pull_request:
        branches:
            - bitmap2svg
    workflow_dispatch:

jobs:
    build_wheels:
        name: Build wheels on ${{ matrix.os }}

        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-python@v5
              with:
                  python-version: '3.x'

            - name: Install Potrace on Ubuntu
              if: runner.os == 'Linux'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libpotrace-dev

            - name: Install Potrace on macOS
              if: runner.os == 'macOS'
              run: |
                  brew install potrace

            - name: Install Potrace on Windows
              if: runner.os == 'Windows'
              run: |
                  echo "Windows Potrace installation needs specific steps"
                  exit 1

            - name: Install cibuildwheel
              run: |
                  pip install cibuildwheel wheel

            - name: Build wheels
              run: cibuildwheel --output-dir wheelhouse

            - uses: actions/upload-artifact@v4
              with:
                  name: wheels-${{ matrix.os }}
                  path: ./wheelhouse/*.whl

    upload_pypi:
        name: Upload wheels to PyPI
        needs: build_wheels
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

        environment:
            name: pypi
            url: https://pypi.org/p/your-package-name

        permissions:
            id-token: write

        steps:
            - uses: actions/download-artifact@v4
              with:
                  pattern: wheels-*
                  path: dist

            - name: List downloaded wheels
              run: ls -R dist/

            - uses: actions/setup-python@v5
              with:
                  python-version: '3.x'

            - name: Install Twine
              run: pip install twine

            - name: Upload wheels
              run: |
                  python -m twine upload dist/*/ --non-interactive
              env:
                  TWINE_USERNAME: __token__
                  TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
